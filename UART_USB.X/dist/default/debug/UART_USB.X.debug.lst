

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun Feb 18 12:02:54 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 1.44
    22                           ; Generated 14/09/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0008                     _PORTD	set	8
   290  0007                     _PORTCbits	set	7
   291  001A                     _RCREG	set	26
   292  000B                     _INTCONbits	set	11
   293  00C7                     _SPEN	set	199
   294  00C4                     _CREN	set	196
   295  0065                     _RCIF	set	101
   296  0099                     _SPBRG	set	153
   297  0088                     _TRISD	set	136
   298  0087                     _TRISCbits	set	135
   299  0087                     _TRISC	set	135
   300  008C                     _PIE1bits	set	140
   301  04C2                     _BRGH	set	1218
   302  04C4                     _SYNC	set	1220
   303                           
   304                           	psect	strings
   305  0015                     __pstrings:	
   306  0015                     stringtab:	
   307  0015                     __stringtab:	
   308                           
   309                           ;	String table - string pointers are 1 byte each
   310  0015  1BFF               	btfsc	btemp+1,7
   311  0016  281F               	ljmp	stringcode
   312  0017  1383               	bcf	3,7
   313  0018  187F               	btfsc	btemp+1,0
   314  0019  1783               	bsf	3,7
   315  001A  0800               	movf	0,w
   316  001B  0A84               	incf	4,f
   317  001C  1903               	skipnz
   318  001D  0AFF               	incf	btemp+1,f
   319  001E  0008               	return
   320  001F                     stringcode:	
   321  001F                     stringdir:	
   322  001F  3000               	movlw	high stringdir
   323  0020  008A               	movwf	10
   324  0021  0804               	movf	4,w
   325  0022  0A84               	incf	4,f
   326  0023  0782               	addwf	2,f
   327  0024                     __stringbase:	
   328  0024  3400               	retlw	0
   329  0025                     __end_of__stringtab:	
   330  0025                     STR_1:	
   331  0025  342D               	retlw	45	;'-'
   332  0026  342D               	retlw	45	;'-'
   333  0027  342D               	retlw	45	;'-'
   334  0028  342D               	retlw	45	;'-'
   335  0029  3400               	retlw	0
   336                           
   337                           ; #config settings
   338  0000                     
   339                           	psect	cinit
   340  07F4                     start_initialization:	
   341  07F4                     __initialization:	
   342                           
   343                           ; Clear objects allocated to COMMON
   344  07F4  01F8               	clrf	__pbssCOMMON& (0+127)
   345                           
   346                           ; Clear objects allocated to BANK0
   347  07F5  1383               	bcf	3,7	;select IRP bank0
   348  07F6  3020               	movlw	low __pbssBANK0
   349  07F7  0084               	movwf	4
   350  07F8  3030               	movlw	low (__pbssBANK0+16)
   351  07F9  120A  118A  26A2   	fcall	clear_ram0
   352  07FC                     end_of_initialization:	
   353                           ;End of C runtime variable initialization code
   354                           
   355  07FC                     __end_of__initialization:	
   356  07FC  0183               	clrf	3
   357  07FD  120A  118A  2EE6   	ljmp	_main	;jump to C main() function
   358                           
   359                           	psect	bssCOMMON
   360  0078                     __pbssCOMMON:	
   361  0078                     _isReceived:	
   362  0078                     	ds	1
   363                           
   364                           	psect	bssBANK0
   365  0020                     __pbssBANK0:	
   366  0020                     _ReceivedString:	
   367  0020                     	ds	16
   368                           
   369                           	psect	clrtext
   370  06A2                     clear_ram0:	
   371                           ;	Called with FSR containing the base address, and
   372                           ;	W with the last address+1
   373                           
   374  06A2  0064               	clrwdt	;clear the watchdog before getting into this loop
   375  06A3                     clrloop0:	
   376  06A3  0180               	clrf	0	;clear RAM location pointed to by FSR
   377  06A4  0A84               	incf	4,f	;increment pointer
   378  06A5  0604               	xorwf	4,w	;XOR with final address
   379  06A6  1903               	btfsc	3,2	;have we reached the end yet?
   380  06A7  3400               	retlw	0	;all done for this memory range, return
   381  06A8  0604               	xorwf	4,w	;XOR again to restore value
   382  06A9  2EA3               	goto	clrloop0	;do the next byte
   383                           
   384                           	psect	cstackCOMMON
   385  0071                     __pcstackCOMMON:	
   386  0071                     ?_mainInit:	
   387  0071                     ?_lcdInit:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0071                     ?_lcdBe:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0071                     ?_uartInit:	
   394                           ; 1 bytes @ 0x0
   395                           
   396  0071                     ?_tc_int:	
   397                           ; 1 bytes @ 0x0
   398                           
   399  0071                     ??_tc_int:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0071                     ?_main:	
   403                           ; 1 bytes @ 0x0
   404                           
   405                           
   406                           ; 1 bytes @ 0x0
   407  0071                     	ds	5
   408  0076                     ??_mainInit:	
   409  0076                     ??_lcdInit:	
   410                           ; 1 bytes @ 0x5
   411                           
   412  0076                     ??_lcdBe:	
   413                           ; 1 bytes @ 0x5
   414                           
   415  0076                     ??_uartInit:	
   416                           ; 1 bytes @ 0x5
   417                           
   418  0076                     ?_WriteLine1:	
   419                           ; 1 bytes @ 0x5
   420                           
   421  0076                     WriteLine1@txt1:	
   422                           ; 1 bytes @ 0x5
   423                           
   424                           
   425                           ; 2 bytes @ 0x5
   426  0076                     	ds	2
   427                           
   428                           	psect	cstackBANK0
   429  0030                     __pcstackBANK0:	
   430  0030                     ??_WriteLine1:	
   431                           
   432                           ; 1 bytes @ 0x0
   433  0030                     	ds	3
   434  0033                     WriteLine1@i:	
   435                           
   436                           ; 2 bytes @ 0x3
   437  0033                     	ds	2
   438  0035                     ??_main:	
   439                           
   440                           ; 1 bytes @ 0x5
   441  0035                     	ds	2
   442                           
   443                           	psect	maintext
   444  06E6                     __pmaintext:	
   445 ;;
   446 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   447 ;;
   448 ;; *************** function _main *****************
   449 ;; Defined at:
   450 ;;		line 38 in file "SW/AppMain.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   459 ;; Tracked objects:
   460 ;;		On entry : B00/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   464 ;;      Params:         0       0       0       0       0
   465 ;;      Locals:         0       0       0       0       0
   466 ;;      Temps:          0       2       0       0       0
   467 ;;      Totals:         0       2       0       0       0
   468 ;;Total ram usage:        2 bytes
   469 ;; Hardware stack levels required when called:    3
   470 ;; This function calls:
   471 ;;		_WriteLine1
   472 ;;		_lcdBe
   473 ;;		_lcdInit
   474 ;;		_mainInit
   475 ;;		_uartInit
   476 ;; This function is called by:
   477 ;;		Startup code after reset
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           
   482                           ;psect for function _main
   483  06E6                     _main:	
   484                           
   485                           ;AppMain.c: 40: mainInit();
   486                           
   487                           ;incstack = 0
   488                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   489  06E6  120A  118A  26AA  120A  118A  	fcall	_mainInit
   490                           
   491                           ;AppMain.c: 42: lcdInit();
   492  06EB  120A  118A  2781  120A  118A  	fcall	_lcdInit
   493                           
   494                           ;AppMain.c: 43: lcdBe();
   495  06F0  120A  118A  26B4  120A  118A  	fcall	_lcdBe
   496                           
   497                           ;AppMain.c: 44: uartInit();
   498  06F5  120A  118A  26C2  120A  118A  	fcall	_uartInit
   499                           
   500                           ;AppMain.c: 46: PIE1bits.RCIE = 1;
   501  06FA  1683               	bsf	3,5	;RP0=1, select bank1
   502  06FB  1303               	bcf	3,6	;RP1=0, select bank1
   503  06FC  168C               	bsf	12,5	;volatile
   504                           
   505                           ;AppMain.c: 47: INTCONbits.PEIE = 1;
   506  06FD  170B               	bsf	11,6	;volatile
   507                           
   508                           ;AppMain.c: 48: INTCONbits.GIE = 1;
   509  06FE  178B               	bsf	11,7	;volatile
   510                           
   511                           ;AppMain.c: 51: WriteLine1("----");
   512  06FF  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   513  0700  00F6               	movwf	WriteLine1@txt1
   514  0701  3080               	movlw	128
   515  0702  00F7               	movwf	WriteLine1@txt1+1
   516  0703  120A  118A  2720  120A  118A  	fcall	_WriteLine1
   517  0708                     l725:	
   518                           ;AppMain.c: 52: while(1)
   519                           
   520                           
   521                           ;AppMain.c: 53: {
   522                           ;AppMain.c: 56: _delay((unsigned long)((10)*(4000000/4000.0)));
   523  0708  300D               	movlw	13
   524  0709  1283               	bcf	3,5	;RP0=0, select bank0
   525  070A  1303               	bcf	3,6	;RP1=0, select bank0
   526  070B  00B6               	movwf	??_main+1
   527  070C  30FB               	movlw	251
   528  070D  00B5               	movwf	??_main
   529  070E                     u147:	
   530  070E  0BB5               	decfsz	??_main,f
   531  070F  2F0E               	goto	u147
   532  0710  0BB6               	decfsz	??_main+1,f
   533  0711  2F0E               	goto	u147
   534                           
   535                           ;AppMain.c: 60: if(isReceived == 1)
   536  0712  0378               	decf	_isReceived,w
   537  0713  1D03               	btfss	3,2
   538  0714  2F08               	goto	l725
   539                           
   540                           ;AppMain.c: 61: {
   541                           ;AppMain.c: 62: WriteLine1(ReceivedString);
   542  0715  3020               	movlw	(low (_ReceivedString| 0))& (0+255)
   543  0716  00F6               	movwf	WriteLine1@txt1
   544  0717  3000               	movlw	0
   545  0718  00F7               	movwf	WriteLine1@txt1+1
   546  0719  120A  118A  2720  120A  118A  	fcall	_WriteLine1
   547                           
   548                           ;AppMain.c: 63: isReceived = 0;
   549  071E  01F8               	clrf	_isReceived
   550  071F  2F08               	goto	l725
   551  0720                     __end_of_main:	
   552                           ;AppMain.c: 64: }
   553                           ;AppMain.c: 66: }
   554                           ;AppMain.c: 69: return;
   555                           
   556                           
   557                           	psect	text1
   558  06C2                     __ptext1:	
   559 ;; *************** function _uartInit *****************
   560 ;; Defined at:
   561 ;;		line 8 in file "SW/UartDriver.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;		None
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   575 ;;      Params:         0       0       0       0       0
   576 ;;      Locals:         0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0
   578 ;;      Totals:         0       0       0       0       0
   579 ;;Total ram usage:        0 bytes
   580 ;; Hardware stack levels used:    1
   581 ;; Hardware stack levels required when called:    1
   582 ;; This function calls:
   583 ;;		Nothing
   584 ;; This function is called by:
   585 ;;		_main
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           
   590                           ;psect for function _uartInit
   591  06C2                     _uartInit:	
   592                           
   593                           ;UartDriver.c: 18: CREN = 1;
   594                           
   595                           ;incstack = 0
   596                           ; Regs used in _uartInit: [wreg]
   597  06C2  1283               	bcf	3,5	;RP0=0, select bank0
   598  06C3  1303               	bcf	3,6	;RP1=0, select bank0
   599  06C4  1618               	bsf	24,4	;volatile
   600                           
   601                           ;UartDriver.c: 19: SYNC = 0;
   602  06C5  1683               	bsf	3,5	;RP0=1, select bank1
   603  06C6  1303               	bcf	3,6	;RP1=0, select bank1
   604  06C7  1218               	bcf	24,4	;volatile
   605                           
   606                           ;UartDriver.c: 20: SPEN = 1;
   607  06C8  1283               	bcf	3,5	;RP0=0, select bank0
   608  06C9  1303               	bcf	3,6	;RP1=0, select bank0
   609  06CA  1798               	bsf	24,7	;volatile
   610                           
   611                           ;UartDriver.c: 25: BRGH = 1;
   612  06CB  1683               	bsf	3,5	;RP0=1, select bank1
   613  06CC  1303               	bcf	3,6	;RP1=0, select bank1
   614  06CD  1518               	bsf	24,2	;volatile
   615                           
   616                           ;UartDriver.c: 26: SPBRG = 25;
   617  06CE  3019               	movlw	25
   618  06CF  0099               	movwf	25	;volatile
   619  06D0  0008               	return
   620  06D1                     __end_of_uartInit:	
   621                           
   622                           	psect	text2
   623  06AA                     __ptext2:	
   624 ;; *************** function _mainInit *****************
   625 ;; Defined at:
   626 ;;		line 72 in file "SW/AppMain.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		status,2
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         0       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0
   643 ;;      Totals:         0       0       0       0       0
   644 ;;Total ram usage:        0 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    1
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           
   655                           ;psect for function _mainInit
   656  06AA                     _mainInit:	
   657                           
   658                           ;AppMain.c: 74: TRISC = 0;
   659                           
   660                           ;incstack = 0
   661                           ; Regs used in _mainInit: [status,2]
   662  06AA  1683               	bsf	3,5	;RP0=1, select bank1
   663  06AB  1303               	bcf	3,6	;RP1=0, select bank1
   664  06AC  0187               	clrf	7	;volatile
   665                           
   666                           ;AppMain.c: 75: TRISCbits.TRISC7 = 1;
   667  06AD  1787               	bsf	7,7	;volatile
   668                           
   669                           ;AppMain.c: 76: TRISD = 0;
   670  06AE  0188               	clrf	8	;volatile
   671                           
   672                           ;AppMain.c: 77: PORTCbits.RC0 = 0;
   673  06AF  1283               	bcf	3,5	;RP0=0, select bank0
   674  06B0  1303               	bcf	3,6	;RP1=0, select bank0
   675  06B1  1007               	bcf	7,0	;volatile
   676                           
   677                           ;AppMain.c: 78: PORTCbits.RC2 = 0;
   678  06B2  1107               	bcf	7,2	;volatile
   679  06B3  0008               	return
   680  06B4                     __end_of_mainInit:	
   681                           
   682                           	psect	text3
   683  0781                     __ptext3:	
   684 ;; *************** function _lcdInit *****************
   685 ;; Defined at:
   686 ;;		line 56 in file "SW/LcdDriver.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   700 ;;      Params:         0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0
   702 ;;      Temps:          2       0       0       0       0
   703 ;;      Totals:         2       0       0       0       0
   704 ;;Total ram usage:        2 bytes
   705 ;; Hardware stack levels used:    1
   706 ;; Hardware stack levels required when called:    1
   707 ;; This function calls:
   708 ;;		Nothing
   709 ;; This function is called by:
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _lcdInit
   716  0781                     _lcdInit:	
   717                           
   718                           ;LcdDriver.c: 58: _delay((unsigned long)((15)*(4000000/4000.0)));
   719                           
   720                           ;incstack = 0
   721                           ; Regs used in _lcdInit: [wreg]
   722  0781  3014               	movlw	20
   723  0782  00F7               	movwf	??_lcdInit+1
   724  0783  3079               	movlw	121
   725  0784  00F6               	movwf	??_lcdInit
   726  0785                     u157:	
   727  0785  0BF6               	decfsz	??_lcdInit,f
   728  0786  2F85               	goto	u157
   729  0787  0BF7               	decfsz	??_lcdInit+1,f
   730  0788  2F85               	goto	u157
   731  0789  2F8A               	nop2
   732                           
   733                           ;LcdDriver.c: 59: PORTD = 0b00111000;
   734  078A  3038               	movlw	56
   735  078B  1283               	bcf	3,5	;RP0=0, select bank0
   736  078C  1303               	bcf	3,6	;RP1=0, select bank0
   737  078D  0088               	movwf	8	;volatile
   738                           
   739                           ;LcdDriver.c: 60: PORTCbits.RC2 = 1;
   740  078E  1507               	bsf	7,2	;volatile
   741                           
   742                           ;LcdDriver.c: 61: _delay((unsigned long)((1)*(4000000/4000000.0)));
   743  078F  0000               	nop
   744                           
   745                           ;LcdDriver.c: 62: PORTCbits.RC2 = 0;
   746  0790  1283               	bcf	3,5	;RP0=0, select bank0
   747  0791  1303               	bcf	3,6	;RP1=0, select bank0
   748  0792  1107               	bcf	7,2	;volatile
   749                           
   750                           ;LcdDriver.c: 64: _delay((unsigned long)((5)*(4000000/4000.0)));
   751  0793  3007               	movlw	7
   752  0794  00F7               	movwf	??_lcdInit+1
   753  0795  307D               	movlw	125
   754  0796  00F6               	movwf	??_lcdInit
   755  0797                     u167:	
   756  0797  0BF6               	decfsz	??_lcdInit,f
   757  0798  2F97               	goto	u167
   758  0799  0BF7               	decfsz	??_lcdInit+1,f
   759  079A  2F97               	goto	u167
   760                           
   761                           ;LcdDriver.c: 65: PORTCbits.RC2 = 1;
   762  079B  1283               	bcf	3,5	;RP0=0, select bank0
   763  079C  1303               	bcf	3,6	;RP1=0, select bank0
   764  079D  1507               	bsf	7,2	;volatile
   765                           
   766                           ;LcdDriver.c: 66: _delay((unsigned long)((1)*(4000000/4000000.0)));
   767  079E  0000               	nop
   768                           
   769                           ;LcdDriver.c: 67: PORTCbits.RC2 = 0;
   770  079F  1283               	bcf	3,5	;RP0=0, select bank0
   771  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   772  07A1  1107               	bcf	7,2	;volatile
   773                           
   774                           ;LcdDriver.c: 69: _delay((unsigned long)((100)*(4000000/4000000.0)));
   775  07A2  3021               	movlw	33
   776  07A3  00F6               	movwf	??_lcdInit
   777  07A4                     u177:	
   778  07A4  0BF6               	decfsz	??_lcdInit,f
   779  07A5  2FA4               	goto	u177
   780                           
   781                           ;LcdDriver.c: 70: PORTCbits.RC2 = 1;
   782  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   783  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   784  07A8  1507               	bsf	7,2	;volatile
   785                           
   786                           ;LcdDriver.c: 71: _delay((unsigned long)((1)*(4000000/4000000.0)));
   787  07A9  0000               	nop
   788                           
   789                           ;LcdDriver.c: 72: PORTCbits.RC2 = 0;
   790  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   791  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   792  07AC  1107               	bcf	7,2	;volatile
   793                           
   794                           ;LcdDriver.c: 74: _delay((unsigned long)((2)*(4000000/4000.0)));
   795  07AD  3003               	movlw	3
   796  07AE  00F7               	movwf	??_lcdInit+1
   797  07AF  3097               	movlw	151
   798  07B0  00F6               	movwf	??_lcdInit
   799  07B1                     u187:	
   800  07B1  0BF6               	decfsz	??_lcdInit,f
   801  07B2  2FB1               	goto	u187
   802  07B3  0BF7               	decfsz	??_lcdInit+1,f
   803  07B4  2FB1               	goto	u187
   804  07B5  2FB6               	nop2
   805                           
   806                           ;LcdDriver.c: 75: PORTCbits.RC2 = 1;
   807  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   808  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   809  07B8  1507               	bsf	7,2	;volatile
   810                           
   811                           ;LcdDriver.c: 76: _delay((unsigned long)((1)*(4000000/4000000.0)));
   812  07B9  0000               	nop
   813                           
   814                           ;LcdDriver.c: 77: PORTCbits.RC2 = 0;
   815  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   816  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   817  07BC  1107               	bcf	7,2	;volatile
   818                           
   819                           ;LcdDriver.c: 78: _delay((unsigned long)((2)*(4000000/4000.0)));
   820  07BD  3003               	movlw	3
   821  07BE  00F7               	movwf	??_lcdInit+1
   822  07BF  3097               	movlw	151
   823  07C0  00F6               	movwf	??_lcdInit
   824  07C1                     u197:	
   825  07C1  0BF6               	decfsz	??_lcdInit,f
   826  07C2  2FC1               	goto	u197
   827  07C3  0BF7               	decfsz	??_lcdInit+1,f
   828  07C4  2FC1               	goto	u197
   829  07C5  2FC6               	nop2
   830                           
   831                           ;LcdDriver.c: 80: PORTCbits.RC2 = 1;
   832  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   833  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   834  07C8  1507               	bsf	7,2	;volatile
   835                           
   836                           ;LcdDriver.c: 81: PORTD = 0b00001000;
   837  07C9  3008               	movlw	8
   838  07CA  0088               	movwf	8	;volatile
   839                           
   840                           ;LcdDriver.c: 82: PORTCbits.RC2 = 0;
   841  07CB  1107               	bcf	7,2	;volatile
   842                           
   843                           ;LcdDriver.c: 83: _delay((unsigned long)((2)*(4000000/4000.0)));
   844  07CC  3003               	movlw	3
   845  07CD  00F7               	movwf	??_lcdInit+1
   846  07CE  3097               	movlw	151
   847  07CF  00F6               	movwf	??_lcdInit
   848  07D0                     u207:	
   849  07D0  0BF6               	decfsz	??_lcdInit,f
   850  07D1  2FD0               	goto	u207
   851  07D2  0BF7               	decfsz	??_lcdInit+1,f
   852  07D3  2FD0               	goto	u207
   853  07D4  2FD5               	nop2
   854                           
   855                           ;LcdDriver.c: 85: PORTCbits.RC2 = 1;
   856  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   857  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   858  07D7  1507               	bsf	7,2	;volatile
   859                           
   860                           ;LcdDriver.c: 86: PORTD = 0b00000001;
   861  07D8  3001               	movlw	1
   862  07D9  0088               	movwf	8	;volatile
   863                           
   864                           ;LcdDriver.c: 87: PORTCbits.RC2 = 0;
   865  07DA  1107               	bcf	7,2	;volatile
   866                           
   867                           ;LcdDriver.c: 88: _delay((unsigned long)((2)*(4000000/4000.0)));
   868  07DB  3003               	movlw	3
   869  07DC  00F7               	movwf	??_lcdInit+1
   870  07DD  3097               	movlw	151
   871  07DE  00F6               	movwf	??_lcdInit
   872  07DF                     u217:	
   873  07DF  0BF6               	decfsz	??_lcdInit,f
   874  07E0  2FDF               	goto	u217
   875  07E1  0BF7               	decfsz	??_lcdInit+1,f
   876  07E2  2FDF               	goto	u217
   877  07E3  2FE4               	nop2
   878                           
   879                           ;LcdDriver.c: 90: PORTCbits.RC2 = 1;
   880  07E4  1283               	bcf	3,5	;RP0=0, select bank0
   881  07E5  1303               	bcf	3,6	;RP1=0, select bank0
   882  07E6  1507               	bsf	7,2	;volatile
   883                           
   884                           ;LcdDriver.c: 91: PORTD = 0b00000110;
   885  07E7  3006               	movlw	6
   886  07E8  0088               	movwf	8	;volatile
   887                           
   888                           ;LcdDriver.c: 92: PORTCbits.RC2 = 0;
   889  07E9  1107               	bcf	7,2	;volatile
   890                           
   891                           ;LcdDriver.c: 93: _delay((unsigned long)((2)*(4000000/4000.0)));
   892  07EA  3003               	movlw	3
   893  07EB  00F7               	movwf	??_lcdInit+1
   894  07EC  3097               	movlw	151
   895  07ED  00F6               	movwf	??_lcdInit
   896  07EE                     u227:	
   897  07EE  0BF6               	decfsz	??_lcdInit,f
   898  07EF  2FEE               	goto	u227
   899  07F0  0BF7               	decfsz	??_lcdInit+1,f
   900  07F1  2FEE               	goto	u227
   901  07F2  2FF3               	nop2
   902  07F3  0008               	return
   903  07F4                     __end_of_lcdInit:	
   904                           
   905                           	psect	text4
   906  06B4                     __ptext4:	
   907 ;; *************** function _lcdBe *****************
   908 ;; Defined at:
   909 ;;		line 99 in file "SW/LcdDriver.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   923 ;;      Params:         0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0
   925 ;;      Temps:          1       0       0       0       0
   926 ;;      Totals:         1       0       0       0       0
   927 ;;Total ram usage:        1 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    1
   930 ;; This function calls:
   931 ;;		Nothing
   932 ;; This function is called by:
   933 ;;		_main
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           
   938                           ;psect for function _lcdBe
   939  06B4                     _lcdBe:	
   940                           
   941                           ;LcdDriver.c: 101: PORTD = 0b00001100;
   942                           
   943                           ;incstack = 0
   944                           ; Regs used in _lcdBe: [wreg]
   945  06B4  300C               	movlw	12
   946  06B5  1283               	bcf	3,5	;RP0=0, select bank0
   947  06B6  1303               	bcf	3,6	;RP1=0, select bank0
   948  06B7  0088               	movwf	8	;volatile
   949                           
   950                           ;LcdDriver.c: 102: PORTCbits.RC2 = 1;
   951  06B8  1507               	bsf	7,2	;volatile
   952                           
   953                           ;LcdDriver.c: 103: _delay((unsigned long)((1)*(4000000/4000000.0)));
   954  06B9  0000               	nop
   955                           
   956                           ;LcdDriver.c: 104: PORTCbits.RC2 = 0;
   957  06BA  1283               	bcf	3,5	;RP0=0, select bank0
   958  06BB  1303               	bcf	3,6	;RP1=0, select bank0
   959  06BC  1107               	bcf	7,2	;volatile
   960                           
   961                           ;LcdDriver.c: 105: _delay((unsigned long)((40)*(4000000/4000000.0)));
   962  06BD  300D               	movlw	13
   963  06BE  00F6               	movwf	??_lcdBe
   964  06BF                     u237:	
   965  06BF  0BF6               	decfsz	??_lcdBe,f
   966  06C0  2EBF               	goto	u237
   967  06C1  0008               	return
   968  06C2                     __end_of_lcdBe:	
   969                           
   970                           	psect	text5
   971  0720                     __ptext5:	
   972 ;; *************** function _WriteLine1 *****************
   973 ;; Defined at:
   974 ;;		line 5 in file "SW/LcdDriver.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  txt1            2    5[COMMON] PTR unsigned char 
   977 ;;		 -> STR_1(5), ReceivedString(16), 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  i               2    3[BANK0 ] int 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   989 ;;      Params:         2       0       0       0       0
   990 ;;      Locals:         0       2       0       0       0
   991 ;;      Temps:          0       3       0       0       0
   992 ;;      Totals:         2       5       0       0       0
   993 ;;Total ram usage:        7 bytes
   994 ;; Hardware stack levels used:    2
   995 ;; Hardware stack levels required when called:    1
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           
  1004                           ;psect for function _WriteLine1
  1005  0720                     _WriteLine1:	
  1006                           
  1007                           ;LcdDriver.c: 10: PORTCbits.RC2 = 1;
  1008                           
  1009                           ;incstack = 0
  1010                           ; Regs used in _WriteLine1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1011  0720  1283               	bcf	3,5	;RP0=0, select bank0
  1012  0721  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0722  1507               	bsf	7,2	;volatile
  1014                           
  1015                           ;LcdDriver.c: 11: PORTD = 0b10000000;
  1016  0723  3080               	movlw	128
  1017  0724  0088               	movwf	8	;volatile
  1018                           
  1019                           ;LcdDriver.c: 12: PORTCbits.RC2 = 0;
  1020  0725  1107               	bcf	7,2	;volatile
  1021                           
  1022                           ;LcdDriver.c: 13: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1023  0726  300C               	movlw	12
  1024  0727  1283               	bcf	3,5	;RP0=0, select bank0
  1025  0728  1303               	bcf	3,6	;RP1=0, select bank0
  1026  0729  00B0               	movwf	??_WriteLine1
  1027  072A                     u247:	
  1028  072A  0BB0               	decfsz	??_WriteLine1,f
  1029  072B  2F2A               	goto	u247
  1030  072C  0000               	nop
  1031                           
  1032                           ;LcdDriver.c: 16: for (int i = 0; (i < 16) && (txt1[i] != 0); i++)
  1033  072D  1283               	bcf	3,5	;RP0=0, select bank0
  1034  072E  1303               	bcf	3,6	;RP1=0, select bank0
  1035  072F  01B3               	clrf	WriteLine1@i
  1036  0730  01B4               	clrf	WriteLine1@i+1
  1037  0731                     l705:	
  1038  0731  0834               	movf	WriteLine1@i+1,w
  1039  0732  3A80               	xorlw	128
  1040  0733  00FF               	movwf	127
  1041  0734  3080               	movlw	128
  1042  0735  027F               	subwf	127,w
  1043  0736  1D03               	skipz
  1044  0737  2F3A               	goto	u105
  1045  0738  3010               	movlw	16
  1046  0739  0233               	subwf	WriteLine1@i,w
  1047  073A                     u105:	
  1048  073A  1803               	skipnc
  1049  073B  0008               	return
  1050  073C  1283               	bcf	3,5	;RP0=0, select bank0
  1051  073D  1303               	bcf	3,6	;RP1=0, select bank0
  1052  073E  0833               	movf	WriteLine1@i,w
  1053  073F  0776               	addwf	WriteLine1@txt1,w
  1054  0740  00B1               	movwf	??_WriteLine1+1
  1055  0741  0877               	movf	WriteLine1@txt1+1,w
  1056  0742  00B0               	movwf	??_WriteLine1
  1057  0743  1803               	skipnc
  1058  0744  0AB0               	incf	??_WriteLine1,f
  1059  0745  1BB3               	btfsc	WriteLine1@i,7
  1060  0746  03B0               	decf	??_WriteLine1,f
  1061  0747  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0748  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0749  0830               	movf	??_WriteLine1,w
  1064  074A  00B2               	movwf	??_WriteLine1+2
  1065  074B  0832               	movf	??_WriteLine1+2,w
  1066  074C  00FF               	movwf	127
  1067  074D  0831               	movf	??_WriteLine1+1,w
  1068  074E  0084               	movwf	4
  1069  074F  120A  118A  2015  120A  118A  	fcall	stringtab
  1070  0754  3A00               	xorlw	0
  1071  0755  1903               	btfsc	3,2
  1072  0756  0008               	return
  1073                           
  1074                           ;LcdDriver.c: 17: {
  1075                           ;LcdDriver.c: 19: PORTCbits.RC0 = 1;
  1076  0757  1407               	bsf	7,0	;volatile
  1077                           
  1078                           ;LcdDriver.c: 20: PORTCbits.RC2 = 1;
  1079  0758  1507               	bsf	7,2	;volatile
  1080                           
  1081                           ;LcdDriver.c: 21: PORTD = txt1[i];
  1082  0759  0833               	movf	WriteLine1@i,w
  1083  075A  0776               	addwf	WriteLine1@txt1,w
  1084  075B  00B1               	movwf	??_WriteLine1+1
  1085  075C  0877               	movf	WriteLine1@txt1+1,w
  1086  075D  00B0               	movwf	??_WriteLine1
  1087  075E  1803               	skipnc
  1088  075F  0AB0               	incf	??_WriteLine1,f
  1089  0760  1BB3               	btfsc	WriteLine1@i,7
  1090  0761  03B0               	decf	??_WriteLine1,f
  1091  0762  1283               	bcf	3,5	;RP0=0, select bank0
  1092  0763  1303               	bcf	3,6	;RP1=0, select bank0
  1093  0764  0830               	movf	??_WriteLine1,w
  1094  0765  00B2               	movwf	??_WriteLine1+2
  1095  0766  0832               	movf	??_WriteLine1+2,w
  1096  0767  00FF               	movwf	127
  1097  0768  0831               	movf	??_WriteLine1+1,w
  1098  0769  0084               	movwf	4
  1099  076A  120A  118A  2015  120A  118A  	fcall	stringtab
  1100  076F  0088               	movwf	8	;volatile
  1101                           
  1102                           ;LcdDriver.c: 22: PORTCbits.RC2 = 0;
  1103  0770  1107               	bcf	7,2	;volatile
  1104                           
  1105                           ;LcdDriver.c: 23: PORTCbits.RC0 = 0;
  1106  0771  1007               	bcf	7,0	;volatile
  1107                           
  1108                           ;LcdDriver.c: 24: _delay((unsigned long)((45)*(4000000/4000000.0)));
  1109  0772  300E               	movlw	14
  1110  0773  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0774  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0775  00B0               	movwf	??_WriteLine1
  1113  0776                     u257:	
  1114  0776  0BB0               	decfsz	??_WriteLine1,f
  1115  0777  2F76               	goto	u257
  1116  0778  3001               	movlw	1
  1117  0779  1283               	bcf	3,5	;RP0=0, select bank0
  1118  077A  1303               	bcf	3,6	;RP1=0, select bank0
  1119  077B  07B3               	addwf	WriteLine1@i,f
  1120  077C  1803               	skipnc
  1121  077D  0AB4               	incf	WriteLine1@i+1,f
  1122  077E  3000               	movlw	0
  1123  077F  07B4               	addwf	WriteLine1@i+1,f
  1124  0780  2F31               	goto	l705
  1125  0781                     __end_of_WriteLine1:	
  1126                           
  1127                           	psect	text6
  1128  06D1                     __ptext6:	
  1129 ;; *************** function _tc_int *****************
  1130 ;; Defined at:
  1131 ;;		line 23 in file "SW/AppMain.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1145 ;;      Params:         0       0       0       0       0
  1146 ;;      Locals:         0       0       0       0       0
  1147 ;;      Temps:          5       0       0       0       0
  1148 ;;      Totals:         5       0       0       0       0
  1149 ;;Total ram usage:        5 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		Interrupt level 1
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           
  1159                           ;psect for function _tc_int
  1160  06D1                     _tc_int:	
  1161                           
  1162                           ;AppMain.c: 25: INTCONbits.PEIE = 0;
  1163  06D1  130B               	bcf	11,6	;volatile
  1164                           
  1165                           ;AppMain.c: 27: if (RCIF == 1)
  1166  06D2  1E8C               	btfss	12,5	;volatile
  1167  06D3  2EDB               	goto	i1l38
  1168                           
  1169                           ;AppMain.c: 28: {
  1170                           ;AppMain.c: 29: RCIF = 0;
  1171  06D4  128C               	bcf	12,5	;volatile
  1172                           
  1173                           ;AppMain.c: 30: ReceivedString[0] = RCREG;
  1174  06D5  081A               	movf	26,w	;volatile
  1175  06D6  00F1               	movwf	??_tc_int
  1176  06D7  0871               	movf	??_tc_int,w
  1177  06D8  00A0               	movwf	_ReceivedString
  1178                           
  1179                           ;AppMain.c: 31: isReceived = 1;
  1180  06D9  01F8               	clrf	_isReceived
  1181  06DA  0AF8               	incf	_isReceived,f
  1182  06DB                     i1l38:	
  1183                           ;AppMain.c: 33: }
  1184                           ;AppMain.c: 35: return;
  1185                           
  1186  06DB  0875               	movf	??_tc_int+4,w
  1187  06DC  00FF               	movwf	127
  1188  06DD  0874               	movf	??_tc_int+3,w
  1189  06DE  008A               	movwf	10
  1190  06DF  0873               	movf	??_tc_int+2,w
  1191  06E0  0084               	movwf	4
  1192  06E1  0E72               	swapf	(??_tc_int+1)^(0+-128),w
  1193  06E2  0083               	movwf	3
  1194  06E3  0EFE               	swapf	126,f
  1195  06E4  0E7E               	swapf	126,w
  1196  06E5  0009               	retfie
  1197  06E6                     __end_of_tc_int:	
  1198  007E                     btemp	set	126	;btemp
  1199  007E                     wtemp0	set	126
  1200                           
  1201                           	psect	intentry
  1202  0004                     __pintentry:	
  1203                           ;incstack = 0
  1204                           ; Regs used in _tc_int: [wreg]
  1205                           
  1206  0004                     interrupt_function:	
  1207  007E                     saved_w	set	btemp
  1208  0004  00FE               	movwf	btemp
  1209  0005  0E03               	swapf	3,w
  1210  0006  00F2               	movwf	??_tc_int+1
  1211  0007  0804               	movf	4,w
  1212  0008  00F3               	movwf	??_tc_int+2
  1213  0009  080A               	movf	10,w
  1214  000A  00F4               	movwf	??_tc_int+3
  1215  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1216  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1217  000D  087F               	movf	btemp+1,w
  1218  000E  00F5               	movwf	??_tc_int+4
  1219  000F  120A  118A  2ED1   	ljmp	_tc_int


Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      7       8
    BANK0            80      7      23
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    WriteLine1@txt1	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[5]), ReceivedString(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_WriteLine1
    _main->_lcdInit

Critical Paths under _tc_int in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_WriteLine1

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     218
                                              5 BANK0      2     2      0
                         _WriteLine1
                              _lcdBe
                            _lcdInit
                           _mainInit
                           _uartInit
 ---------------------------------------------------------------------------------
 (1) _uartInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mainInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0       0
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcdBe                                                1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _WriteLine1                                           7     5      2     218
                                              5 COMMON     2     0      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _tc_int                                               5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _WriteLine1
   _lcdBe
   _lcdInit
   _mainInit
   _uartInit

 _tc_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      7       8       1       61.5%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7      17       5       28.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1F      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun Feb 18 12:02:54 2018

                       pc 0002               __CFG_CP$OFF 0000                        fsr 0004  
                     l705 0731                       l725 0708                       u105 073A  
                     u207 07D0                       u217 07DF                       u227 07EE  
                     u147 070E                       u237 06BF                       u157 0785  
                     u247 072A                       u167 0797                       u257 0776  
                     u177 07A4              __CFG_CPD$OFF 0000                       u187 07B1  
                     u197 07C1                       fsr0 0004                       indf 0000  
            __CFG_LVP$OFF 0000                      STR_1 0025                      _BRGH 04C2  
                    _CREN 00C4                      _RCIF 0065                      i1l38 06DB  
                    _SPEN 00C7                      _SYNC 04C4              __CFG_WRT$OFF 0000  
                    _main 06E6                      btemp 007E                      start 0012  
           __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000                     ?_main 0071  
           __CFG_WDTE$OFF 0000                     _RCREG 001A                     _SPBRG 0099  
                   _PORTD 0008                     _TRISC 0087                     _TRISD 0088  
           __CFG_PWRTE$ON 0000           __end_of_lcdInit 07F4            __CFG_FCMEN$OFF 0000  
                   _lcdBe 06B4            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 07F4  
            __end_of_main 0720                    ??_main 0035                    ?_lcdBe 0071  
        __end_of_mainInit 06B4                    _tc_int 06D1                 ??_lcdInit 0076  
        __end_of_uartInit 06D1                    saved_w 007E            WriteLine1@txt1 0076  
 __end_of__initialization 07FC            __pcstackCOMMON 0071                _WriteLine1 0720  
           __end_of_lcdBe 06C2                   ??_lcdBe 0076                __pbssBANK0 0020  
              __pmaintext 06E6                __pintentry 0004                   ?_tc_int 0071  
              _isReceived 0078                 ?_mainInit 0071                __stringtab 0015  
               ?_uartInit 0071               ?_WriteLine1 0076           __size_of_tc_int 0015  
                 _lcdInit 0781                   __ptext1 06C2                   __ptext2 06AA  
                 __ptext3 0781                   __ptext4 06B4                   __ptext5 0720  
                 __ptext6 06D1                   clrloop0 06A3                ??_mainInit 0076  
    end_of_initialization 07FC                ??_uartInit 0076                 _PORTCbits 0007  
               _TRISCbits 0087       __size_of_WriteLine1 0061            _ReceivedString 0020  
          __end_of_tc_int 06E6       start_initialization 07F4  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                ??_tc_int 0071               __pbssCOMMON 0078                 ___latbits 0002  
           __pcstackBANK0 0030         __size_of_mainInit 000A               WriteLine1@i 0033  
            ??_WriteLine1 0030         __size_of_uartInit 000F                 __pstrings 0015  
                ?_lcdInit 0071            __size_of_lcdBe 000E        __end_of_WriteLine1 0781  
       interrupt_function 0004                 clear_ram0 06A2                  _PIE1bits 008C  
             __stringbase 0024        __end_of__stringtab 0025          __size_of_lcdInit 0073  
       __CFG_BOR4V$BOR21V 0000                  _mainInit 06AA             __size_of_main 003A  
                _uartInit 06C2                _INTCONbits 000B                  intlevel1 0000  
               stringcode 001F                  stringdir 001F                  stringtab 0015  
