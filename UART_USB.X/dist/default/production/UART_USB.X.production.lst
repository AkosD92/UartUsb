

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun Feb 25 18:53:19 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 1.44
    24                           ; Generated 14/09/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  000B                     _INTCONbits	set	11
   292  0008                     _PORTD	set	8
   293  0007                     _PORTCbits	set	7
   294  001A                     _RCREG	set	26
   295  00C7                     _SPEN	set	199
   296  00C4                     _CREN	set	196
   297  0065                     _RCIF	set	101
   298  0099                     _SPBRG	set	153
   299  008C                     _PIE1bits	set	140
   300  0088                     _TRISD	set	136
   301  0087                     _TRISCbits	set	135
   302  0087                     _TRISC	set	135
   303  04C2                     _BRGH	set	1218
   304  04C4                     _SYNC	set	1220
   305                           
   306                           	psect	strings
   307  020A                     __pstrings:	
   308  020A                     stringtab:	
   309  020A                     __stringtab:	
   310                           
   311                           ;	String table - string pointers are 1 byte each
   312  020A  1BFF               	btfsc	btemp+1,7
   313  020B  2A14               	ljmp	stringcode
   314  020C  1383               	bcf	3,7
   315  020D  187F               	btfsc	btemp+1,0
   316  020E  1783               	bsf	3,7
   317  020F  0800               	movf	0,w
   318  0210  0A84               	incf	4,f
   319  0211  1903               	skipnz
   320  0212  0AFF               	incf	btemp+1,f
   321  0213  0008               	return
   322  0214                     stringcode:	
   323  0214                     stringdir:	
   324  0214  3002               	movlw	high stringdir
   325  0215  008A               	movwf	10
   326  0216  0804               	movf	4,w
   327  0217  0A84               	incf	4,f
   328  0218  0782               	addwf	2,f
   329  0219                     __stringbase:	
   330  0219  3400               	retlw	0
   331  021A                     __end_of__stringtab:	
   332  021A                     STR_1:	
   333  021A  3453               	retlw	83	;'S'
   334  021B  3479               	retlw	121	;'y'
   335  021C  3473               	retlw	115	;'s'
   336  021D  3474               	retlw	116	;'t'
   337  021E  3465               	retlw	101	;'e'
   338  021F  346D               	retlw	109	;'m'
   339  0220  3420               	retlw	32	;' '
   340  0221  3472               	retlw	114	;'r'
   341  0222  3465               	retlw	101	;'e'
   342  0223  3461               	retlw	97	;'a'
   343  0224  3464               	retlw	100	;'d'
   344  0225  3479               	retlw	121	;'y'
   345  0226  3400               	retlw	0
   346  0227                     STR_2:	
   347  0227  3450               	retlw	80	;'P'
   348  0228  3449               	retlw	73	;'I'
   349  0229  3443               	retlw	67	;'C'
   350  022A  3431               	retlw	49	;'1'
   351  022B  3436               	retlw	54	;'6'
   352  022C  3446               	retlw	70	;'F'
   353  022D  3438               	retlw	56	;'8'
   354  022E  3438               	retlw	56	;'8'
   355  022F  3437               	retlw	55	;'7'
   356  0230  3400               	retlw	0
   357                           
   358                           ; #config settings
   359  0000                     
   360                           	psect	cinit
   361  0015                     start_initialization:	
   362  0015                     __initialization:	
   363                           
   364                           ; Clear objects allocated to COMMON
   365  0015  01F7               	clrf	__pbssCOMMON& (0+127)
   366  0016  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   367                           
   368                           ; Clear objects allocated to BANK0
   369  0017  1383               	bcf	3,7	;select IRP bank0
   370  0018  3020               	movlw	low __pbssBANK0
   371  0019  0084               	movwf	4
   372  001A  3042               	movlw	low (__pbssBANK0+34)
   373  001B  120A  118A  226D   	fcall	clear_ram0
   374  001E                     end_of_initialization:	
   375                           ;End of C runtime variable initialization code
   376                           
   377  001E                     __end_of__initialization:	
   378  001E  0183               	clrf	3
   379  001F  120A  118A  2822   	ljmp	_main	;jump to C main() function
   380                           
   381                           	psect	bssCOMMON
   382  0077                     __pbssCOMMON:	
   383  0077                     _CheckPassed:	
   384  0077                     	ds	1
   385  0078                     _ReceivedCheck:	
   386  0078                     	ds	1
   387                           
   388                           	psect	bssBANK0
   389  0020                     __pbssBANK0:	
   390  0020                     _SecondLineCnt:	
   391  0020                     	ds	1
   392  0021                     _FirstLineCnt:	
   393  0021                     	ds	1
   394  0022                     _ReceivedSecondLine:	
   395  0022                     	ds	16
   396  0032                     _ReceivedFirstLine:	
   397  0032                     	ds	16
   398                           
   399                           	psect	clrtext
   400  026D                     clear_ram0:	
   401                           ;	Called with FSR containing the base address, and
   402                           ;	W with the last address+1
   403                           
   404  026D  0064               	clrwdt	;clear the watchdog before getting into this loop
   405  026E                     clrloop0:	
   406  026E  0180               	clrf	0	;clear RAM location pointed to by FSR
   407  026F  0A84               	incf	4,f	;increment pointer
   408  0270  0604               	xorwf	4,w	;XOR with final address
   409  0271  1903               	btfsc	3,2	;have we reached the end yet?
   410  0272  3400               	retlw	0	;all done for this memory range, return
   411  0273  0604               	xorwf	4,w	;XOR again to restore value
   412  0274  2A6E               	goto	clrloop0	;do the next byte
   413                           
   414                           	psect	cstackCOMMON
   415  0070                     __pcstackCOMMON:	
   416  0070                     ?_mainInit:	
   417  0070                     ?_lcdInit:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_lcdBe:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_uartInit:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_lcdClean:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_tc_int:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ??_tc_int:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_main:	
   436                           ; 1 bytes @ 0x0
   437                           
   438                           
   439                           ; 1 bytes @ 0x0
   440  0070                     	ds	5
   441  0075                     ??_mainInit:	
   442  0075                     ??_lcdInit:	
   443                           ; 1 bytes @ 0x5
   444                           
   445  0075                     ??_lcdBe:	
   446                           ; 1 bytes @ 0x5
   447                           
   448  0075                     ??_uartInit:	
   449                           ; 1 bytes @ 0x5
   450                           
   451  0075                     ?_WriteLine1:	
   452                           ; 1 bytes @ 0x5
   453                           
   454  0075                     ?_WriteLine2:	
   455                           ; 1 bytes @ 0x5
   456                           
   457  0075                     ??_lcdClean:	
   458                           ; 1 bytes @ 0x5
   459                           
   460  0075                     WriteLine1@txt1:	
   461                           ; 1 bytes @ 0x5
   462                           
   463  0075                     WriteLine2@txt2:	
   464                           ; 2 bytes @ 0x5
   465                           
   466                           
   467                           ; 2 bytes @ 0x5
   468  0075                     	ds	2
   469                           
   470                           	psect	cstackBANK0
   471  0042                     __pcstackBANK0:	
   472  0042                     ??_WriteLine1:	
   473  0042                     ??_WriteLine2:	
   474                           ; 1 bytes @ 0x0
   475                           
   476                           
   477                           ; 1 bytes @ 0x0
   478  0042                     	ds	3
   479  0045                     WriteLine1@i:	
   480  0045                     WriteLine2@i:	
   481                           ; 2 bytes @ 0x3
   482                           
   483                           
   484                           ; 2 bytes @ 0x3
   485  0045                     	ds	2
   486  0047                     ??_main:	
   487                           
   488                           ; 1 bytes @ 0x5
   489  0047                     	ds	2
   490  0049                     main@i:	
   491                           
   492                           ; 2 bytes @ 0x7
   493  0049                     	ds	2
   494                           
   495                           	psect	maintext
   496  0022                     __pmaintext:	
   497 ;;
   498 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   499 ;;
   500 ;; *************** function _main *****************
   501 ;; Defined at:
   502 ;;		line 69 in file "SW/AppMain.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;		None
   505 ;; Auto vars:     Size  Location     Type
   506 ;;  i               2    7[BANK0 ] int 
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   511 ;; Tracked objects:
   512 ;;		On entry : B00/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   516 ;;      Params:         0       0       0       0       0
   517 ;;      Locals:         0       2       0       0       0
   518 ;;      Temps:          0       2       0       0       0
   519 ;;      Totals:         0       4       0       0       0
   520 ;;Total ram usage:        4 bytes
   521 ;; Hardware stack levels required when called:    3
   522 ;; This function calls:
   523 ;;		_WriteLine1
   524 ;;		_WriteLine2
   525 ;;		_lcdBe
   526 ;;		_lcdClean
   527 ;;		_lcdInit
   528 ;;		_mainInit
   529 ;;		_uartInit
   530 ;; This function is called by:
   531 ;;		Startup code after reset
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           
   536                           ;psect for function _main
   537  0022                     _main:	
   538                           
   539                           ;AppMain.c: 71: mainInit();
   540                           
   541                           ;incstack = 0
   542                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   543  0022  120A  118A  2263  120A  118A  	fcall	_mainInit
   544                           
   545                           ;AppMain.c: 72: lcdInit();
   546  0027  120A  118A  2098  120A  118A  	fcall	_lcdInit
   547                           
   548                           ;AppMain.c: 73: lcdBe();
   549  002C  120A  118A  2255  120A  118A  	fcall	_lcdBe
   550                           
   551                           ;AppMain.c: 74: uartInit();
   552  0031  120A  118A  2231  120A  118A  	fcall	_uartInit
   553                           
   554                           ;AppMain.c: 76: WriteLine1("System ready");
   555  0036  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   556  0037  00F5               	movwf	WriteLine1@txt1
   557  0038  3080               	movlw	128
   558  0039  00F6               	movwf	WriteLine1@txt1+1
   559  003A  120A  118A  216C  120A  118A  	fcall	_WriteLine1
   560                           
   561                           ;AppMain.c: 77: WriteLine2("PIC16F887");
   562  003F  300E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   563  0040  00F5               	movwf	WriteLine2@txt2
   564  0041  3080               	movlw	128
   565  0042  00F6               	movwf	WriteLine2@txt2+1
   566  0043  120A  118A  210B  120A  118A  	fcall	_WriteLine2
   567  0048                     l57:	
   568                           ;AppMain.c: 79: while(1)
   569                           
   570                           
   571                           ;AppMain.c: 80: {
   572                           ;AppMain.c: 81: _delay((unsigned long)((10)*(4000000/4000.0)));
   573  0048  300D               	movlw	13
   574  0049  1283               	bcf	3,5	;RP0=0, select bank0
   575  004A  1303               	bcf	3,6	;RP1=0, select bank0
   576  004B  00C8               	movwf	??_main+1
   577  004C  30FB               	movlw	251
   578  004D  00C7               	movwf	??_main
   579  004E                     u427:	
   580  004E  0BC7               	decfsz	??_main,f
   581  004F  284E               	goto	u427
   582  0050  0BC8               	decfsz	??_main+1,f
   583  0051  284E               	goto	u427
   584                           
   585                           ;AppMain.c: 83: if(SecondLineCnt == (16-1))
   586  0052  300F               	movlw	15
   587  0053  1283               	bcf	3,5	;RP0=0, select bank0
   588  0054  1303               	bcf	3,6	;RP1=0, select bank0
   589  0055  0620               	xorwf	_SecondLineCnt,w
   590  0056  1D03               	btfss	3,2
   591  0057  2848               	goto	l57
   592                           
   593                           ;AppMain.c: 84: {
   594                           ;AppMain.c: 85: lcdClean();
   595  0058  120A  118A  2245  120A  118A  	fcall	_lcdClean
   596                           
   597                           ;AppMain.c: 87: WriteLine1(ReceivedFirstLine);
   598  005D  3032               	movlw	(low (_ReceivedFirstLine| 0))& (0+255)
   599  005E  00F5               	movwf	WriteLine1@txt1
   600  005F  3000               	movlw	0
   601  0060  00F6               	movwf	WriteLine1@txt1+1
   602  0061  120A  118A  216C  120A  118A  	fcall	_WriteLine1
   603                           
   604                           ;AppMain.c: 88: WriteLine2(ReceivedSecondLine);
   605  0066  3022               	movlw	(low (_ReceivedSecondLine| 0))& (0+255)
   606  0067  00F5               	movwf	WriteLine2@txt2
   607  0068  3000               	movlw	0
   608  0069  00F6               	movwf	WriteLine2@txt2+1
   609  006A  120A  118A  210B  120A  118A  	fcall	_WriteLine2
   610                           
   611                           ;AppMain.c: 89: FirstLineCnt = 0;
   612  006F  1283               	bcf	3,5	;RP0=0, select bank0
   613  0070  1303               	bcf	3,6	;RP1=0, select bank0
   614  0071  01A1               	clrf	_FirstLineCnt
   615                           
   616                           ;AppMain.c: 90: SecondLineCnt = 0;
   617  0072  01A0               	clrf	_SecondLineCnt
   618                           
   619                           ;AppMain.c: 92: for(int i = 0; i < 16; i++)
   620  0073  01C9               	clrf	main@i
   621  0074  01CA               	clrf	main@i+1
   622  0075                     L1:	
   623  0075  084A               	movf	main@i+1,w
   624  0076  3A80               	xorlw	128
   625  0077  00FF               	movwf	127
   626  0078  3080               	movlw	128
   627  0079  027F               	subwf	127,w
   628  007A  1D03               	skipz
   629  007B  287E               	goto	u405
   630  007C  3010               	movlw	16
   631  007D  0249               	subwf	main@i,w
   632  007E                     u405:	
   633  007E  1803               	btfsc	3,0
   634  007F  2848               	goto	l57
   635                           
   636                           ;AppMain.c: 93: {
   637                           ;AppMain.c: 94: ReceivedFirstLine[i] = ' ';
   638  0080  3020               	movlw	32
   639  0081  1283               	bcf	3,5	;RP0=0, select bank0
   640  0082  1303               	bcf	3,6	;RP1=0, select bank0
   641  0083  00C7               	movwf	??_main
   642  0084  0849               	movf	main@i,w
   643  0085  3E32               	addlw	(low (_ReceivedFirstLine| 0))& (0+255)
   644  0086  0084               	movwf	4
   645  0087  0847               	movf	??_main,w
   646  0088  1383               	bcf	3,7	;select IRP bank0
   647  0089  0080               	movwf	0
   648                           
   649                           ;AppMain.c: 95: ReceivedSecondLine[i] = ' ';
   650  008A  3020               	movlw	32
   651  008B  00C7               	movwf	??_main
   652  008C  0849               	movf	main@i,w
   653  008D  3E22               	addlw	(low (_ReceivedSecondLine| 0))& (0+255)
   654  008E  0084               	movwf	4
   655  008F  0847               	movf	??_main,w
   656  0090  0080               	movwf	0
   657  0091  3001               	movlw	1
   658  0092  07C9               	addwf	main@i,f
   659  0093  1803               	skipnc
   660  0094  0ACA               	incf	main@i+1,f
   661  0095  3000               	movlw	0
   662  0096  07CA               	addwf	main@i+1,f
   663  0097  2875               	goto	L1
   664  0098                     __end_of_main:	
   665                           ;AppMain.c: 96: }
   666                           ;AppMain.c: 98: }
   667                           ;AppMain.c: 100: }
   668                           ;AppMain.c: 103: return;
   669                           
   670                           
   671                           	psect	text1
   672  0231                     __ptext1:	
   673 ;; *************** function _uartInit *****************
   674 ;; Defined at:
   675 ;;		line 7 in file "SW/UartDriver.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;		None
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   689 ;;      Params:         0       0       0       0       0
   690 ;;      Locals:         0       0       0       0       0
   691 ;;      Temps:          0       0       0       0       0
   692 ;;      Totals:         0       0       0       0       0
   693 ;;Total ram usage:        0 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; Hardware stack levels required when called:    1
   696 ;; This function calls:
   697 ;;		Nothing
   698 ;; This function is called by:
   699 ;;		_main
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           
   704                           ;psect for function _uartInit
   705  0231                     _uartInit:	
   706                           
   707                           ;UartDriver.c: 13: PIE1bits.RCIE = 1;
   708                           
   709                           ;incstack = 0
   710                           ; Regs used in _uartInit: [wreg]
   711  0231  1683               	bsf	3,5	;RP0=1, select bank1
   712  0232  1303               	bcf	3,6	;RP1=0, select bank1
   713  0233  168C               	bsf	12,5	;volatile
   714                           
   715                           ;UartDriver.c: 14: INTCONbits.PEIE = 1;
   716  0234  170B               	bsf	11,6	;volatile
   717                           
   718                           ;UartDriver.c: 15: INTCONbits.GIE = 1;
   719  0235  178B               	bsf	11,7	;volatile
   720                           
   721                           ;UartDriver.c: 19: CREN = 1;
   722  0236  1283               	bcf	3,5	;RP0=0, select bank0
   723  0237  1303               	bcf	3,6	;RP1=0, select bank0
   724  0238  1618               	bsf	24,4	;volatile
   725                           
   726                           ;UartDriver.c: 20: SYNC = 0;
   727  0239  1683               	bsf	3,5	;RP0=1, select bank1
   728  023A  1303               	bcf	3,6	;RP1=0, select bank1
   729  023B  1218               	bcf	24,4	;volatile
   730                           
   731                           ;UartDriver.c: 21: SPEN = 1;
   732  023C  1283               	bcf	3,5	;RP0=0, select bank0
   733  023D  1303               	bcf	3,6	;RP1=0, select bank0
   734  023E  1798               	bsf	24,7	;volatile
   735                           
   736                           ;UartDriver.c: 26: BRGH = 1;
   737  023F  1683               	bsf	3,5	;RP0=1, select bank1
   738  0240  1303               	bcf	3,6	;RP1=0, select bank1
   739  0241  1518               	bsf	24,2	;volatile
   740                           
   741                           ;UartDriver.c: 27: SPBRG = 25;
   742  0242  3019               	movlw	25
   743  0243  0099               	movwf	25	;volatile
   744  0244  0008               	return
   745  0245                     __end_of_uartInit:	
   746                           
   747                           	psect	text2
   748  0263                     __ptext2:	
   749 ;; *************** function _mainInit *****************
   750 ;; Defined at:
   751 ;;		line 106 in file "SW/AppMain.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		status,2
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0
   768 ;;      Totals:         0       0       0       0       0
   769 ;;Total ram usage:        0 bytes
   770 ;; Hardware stack levels used:    1
   771 ;; Hardware stack levels required when called:    1
   772 ;; This function calls:
   773 ;;		Nothing
   774 ;; This function is called by:
   775 ;;		_main
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           
   780                           ;psect for function _mainInit
   781  0263                     _mainInit:	
   782                           
   783                           ;AppMain.c: 108: TRISC = 0;
   784                           
   785                           ;incstack = 0
   786                           ; Regs used in _mainInit: [status,2]
   787  0263  1683               	bsf	3,5	;RP0=1, select bank1
   788  0264  1303               	bcf	3,6	;RP1=0, select bank1
   789  0265  0187               	clrf	7	;volatile
   790                           
   791                           ;AppMain.c: 109: TRISCbits.TRISC7 = 1;
   792  0266  1787               	bsf	7,7	;volatile
   793                           
   794                           ;AppMain.c: 110: TRISD = 0;
   795  0267  0188               	clrf	8	;volatile
   796                           
   797                           ;AppMain.c: 111: PORTCbits.RC0 = 0;
   798  0268  1283               	bcf	3,5	;RP0=0, select bank0
   799  0269  1303               	bcf	3,6	;RP1=0, select bank0
   800  026A  1007               	bcf	7,0	;volatile
   801                           
   802                           ;AppMain.c: 112: PORTCbits.RC2 = 0;
   803  026B  1107               	bcf	7,2	;volatile
   804  026C  0008               	return
   805  026D                     __end_of_mainInit:	
   806                           
   807                           	psect	text3
   808  0098                     __ptext3:	
   809 ;; *************** function _lcdInit *****************
   810 ;; Defined at:
   811 ;;		line 56 in file "SW/LcdDriver.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   825 ;;      Params:         0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0
   827 ;;      Temps:          2       0       0       0       0
   828 ;;      Totals:         2       0       0       0       0
   829 ;;Total ram usage:        2 bytes
   830 ;; Hardware stack levels used:    1
   831 ;; Hardware stack levels required when called:    1
   832 ;; This function calls:
   833 ;;		Nothing
   834 ;; This function is called by:
   835 ;;		_main
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           
   840                           ;psect for function _lcdInit
   841  0098                     _lcdInit:	
   842                           
   843                           ;LcdDriver.c: 58: _delay((unsigned long)((15)*(4000000/4000.0)));
   844                           
   845                           ;incstack = 0
   846                           ; Regs used in _lcdInit: [wreg]
   847  0098  3014               	movlw	20
   848  0099  00F6               	movwf	??_lcdInit+1
   849  009A  3079               	movlw	121
   850  009B  00F5               	movwf	??_lcdInit
   851  009C                     u437:	
   852  009C  0BF5               	decfsz	??_lcdInit,f
   853  009D  289C               	goto	u437
   854  009E  0BF6               	decfsz	??_lcdInit+1,f
   855  009F  289C               	goto	u437
   856  00A0  28A1               	nop2
   857                           
   858                           ;LcdDriver.c: 59: PORTD = 0b00111000;
   859  00A1  3038               	movlw	56
   860  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   861  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   862  00A4  0088               	movwf	8	;volatile
   863                           
   864                           ;LcdDriver.c: 60: PORTCbits.RC2 = 1;
   865  00A5  1507               	bsf	7,2	;volatile
   866                           
   867                           ;LcdDriver.c: 61: _delay((unsigned long)((1)*(4000000/4000000.0)));
   868  00A6  0000               	nop
   869                           
   870                           ;LcdDriver.c: 62: PORTCbits.RC2 = 0;
   871  00A7  1283               	bcf	3,5	;RP0=0, select bank0
   872  00A8  1303               	bcf	3,6	;RP1=0, select bank0
   873  00A9  1107               	bcf	7,2	;volatile
   874                           
   875                           ;LcdDriver.c: 64: _delay((unsigned long)((5)*(4000000/4000.0)));
   876  00AA  3007               	movlw	7
   877  00AB  00F6               	movwf	??_lcdInit+1
   878  00AC  307D               	movlw	125
   879  00AD  00F5               	movwf	??_lcdInit
   880  00AE                     u447:	
   881  00AE  0BF5               	decfsz	??_lcdInit,f
   882  00AF  28AE               	goto	u447
   883  00B0  0BF6               	decfsz	??_lcdInit+1,f
   884  00B1  28AE               	goto	u447
   885                           
   886                           ;LcdDriver.c: 65: PORTCbits.RC2 = 1;
   887  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   888  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   889  00B4  1507               	bsf	7,2	;volatile
   890                           
   891                           ;LcdDriver.c: 66: _delay((unsigned long)((1)*(4000000/4000000.0)));
   892  00B5  0000               	nop
   893                           
   894                           ;LcdDriver.c: 67: PORTCbits.RC2 = 0;
   895  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   896  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   897  00B8  1107               	bcf	7,2	;volatile
   898                           
   899                           ;LcdDriver.c: 69: _delay((unsigned long)((100)*(4000000/4000000.0)));
   900  00B9  3021               	movlw	33
   901  00BA  00F5               	movwf	??_lcdInit
   902  00BB                     u457:	
   903  00BB  0BF5               	decfsz	??_lcdInit,f
   904  00BC  28BB               	goto	u457
   905                           
   906                           ;LcdDriver.c: 70: PORTCbits.RC2 = 1;
   907  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   908  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   909  00BF  1507               	bsf	7,2	;volatile
   910                           
   911                           ;LcdDriver.c: 71: _delay((unsigned long)((1)*(4000000/4000000.0)));
   912  00C0  0000               	nop
   913                           
   914                           ;LcdDriver.c: 72: PORTCbits.RC2 = 0;
   915  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   916  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   917  00C3  1107               	bcf	7,2	;volatile
   918                           
   919                           ;LcdDriver.c: 74: _delay((unsigned long)((2)*(4000000/4000.0)));
   920  00C4  3003               	movlw	3
   921  00C5  00F6               	movwf	??_lcdInit+1
   922  00C6  3097               	movlw	151
   923  00C7  00F5               	movwf	??_lcdInit
   924  00C8                     u467:	
   925  00C8  0BF5               	decfsz	??_lcdInit,f
   926  00C9  28C8               	goto	u467
   927  00CA  0BF6               	decfsz	??_lcdInit+1,f
   928  00CB  28C8               	goto	u467
   929  00CC  28CD               	nop2
   930                           
   931                           ;LcdDriver.c: 75: PORTCbits.RC2 = 1;
   932  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   933  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   934  00CF  1507               	bsf	7,2	;volatile
   935                           
   936                           ;LcdDriver.c: 76: _delay((unsigned long)((1)*(4000000/4000000.0)));
   937  00D0  0000               	nop
   938                           
   939                           ;LcdDriver.c: 77: PORTCbits.RC2 = 0;
   940  00D1  1283               	bcf	3,5	;RP0=0, select bank0
   941  00D2  1303               	bcf	3,6	;RP1=0, select bank0
   942  00D3  1107               	bcf	7,2	;volatile
   943                           
   944                           ;LcdDriver.c: 78: _delay((unsigned long)((2)*(4000000/4000.0)));
   945  00D4  3003               	movlw	3
   946  00D5  00F6               	movwf	??_lcdInit+1
   947  00D6  3097               	movlw	151
   948  00D7  00F5               	movwf	??_lcdInit
   949  00D8                     u477:	
   950  00D8  0BF5               	decfsz	??_lcdInit,f
   951  00D9  28D8               	goto	u477
   952  00DA  0BF6               	decfsz	??_lcdInit+1,f
   953  00DB  28D8               	goto	u477
   954  00DC  28DD               	nop2
   955                           
   956                           ;LcdDriver.c: 80: PORTCbits.RC2 = 1;
   957  00DD  1283               	bcf	3,5	;RP0=0, select bank0
   958  00DE  1303               	bcf	3,6	;RP1=0, select bank0
   959  00DF  1507               	bsf	7,2	;volatile
   960                           
   961                           ;LcdDriver.c: 81: PORTD = 0b00001000;
   962  00E0  3008               	movlw	8
   963  00E1  0088               	movwf	8	;volatile
   964                           
   965                           ;LcdDriver.c: 82: PORTCbits.RC2 = 0;
   966  00E2  1107               	bcf	7,2	;volatile
   967                           
   968                           ;LcdDriver.c: 83: _delay((unsigned long)((2)*(4000000/4000.0)));
   969  00E3  3003               	movlw	3
   970  00E4  00F6               	movwf	??_lcdInit+1
   971  00E5  3097               	movlw	151
   972  00E6  00F5               	movwf	??_lcdInit
   973  00E7                     u487:	
   974  00E7  0BF5               	decfsz	??_lcdInit,f
   975  00E8  28E7               	goto	u487
   976  00E9  0BF6               	decfsz	??_lcdInit+1,f
   977  00EA  28E7               	goto	u487
   978  00EB  28EC               	nop2
   979                           
   980                           ;LcdDriver.c: 85: PORTCbits.RC2 = 1;
   981  00EC  1283               	bcf	3,5	;RP0=0, select bank0
   982  00ED  1303               	bcf	3,6	;RP1=0, select bank0
   983  00EE  1507               	bsf	7,2	;volatile
   984                           
   985                           ;LcdDriver.c: 86: PORTD = 0b00000001;
   986  00EF  3001               	movlw	1
   987  00F0  0088               	movwf	8	;volatile
   988                           
   989                           ;LcdDriver.c: 87: PORTCbits.RC2 = 0;
   990  00F1  1107               	bcf	7,2	;volatile
   991                           
   992                           ;LcdDriver.c: 88: _delay((unsigned long)((2)*(4000000/4000.0)));
   993  00F2  3003               	movlw	3
   994  00F3  00F6               	movwf	??_lcdInit+1
   995  00F4  3097               	movlw	151
   996  00F5  00F5               	movwf	??_lcdInit
   997  00F6                     u497:	
   998  00F6  0BF5               	decfsz	??_lcdInit,f
   999  00F7  28F6               	goto	u497
  1000  00F8  0BF6               	decfsz	??_lcdInit+1,f
  1001  00F9  28F6               	goto	u497
  1002  00FA  28FB               	nop2
  1003                           
  1004                           ;LcdDriver.c: 90: PORTCbits.RC2 = 1;
  1005  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1006  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1007  00FD  1507               	bsf	7,2	;volatile
  1008                           
  1009                           ;LcdDriver.c: 91: PORTD = 0b00000110;
  1010  00FE  3006               	movlw	6
  1011  00FF  0088               	movwf	8	;volatile
  1012                           
  1013                           ;LcdDriver.c: 92: PORTCbits.RC2 = 0;
  1014  0100  1107               	bcf	7,2	;volatile
  1015                           
  1016                           ;LcdDriver.c: 93: _delay((unsigned long)((2)*(4000000/4000.0)));
  1017  0101  3003               	movlw	3
  1018  0102  00F6               	movwf	??_lcdInit+1
  1019  0103  3097               	movlw	151
  1020  0104  00F5               	movwf	??_lcdInit
  1021  0105                     u507:	
  1022  0105  0BF5               	decfsz	??_lcdInit,f
  1023  0106  2905               	goto	u507
  1024  0107  0BF6               	decfsz	??_lcdInit+1,f
  1025  0108  2905               	goto	u507
  1026  0109  290A               	nop2
  1027  010A  0008               	return
  1028  010B                     __end_of_lcdInit:	
  1029                           
  1030                           	psect	text4
  1031  0245                     __ptext4:	
  1032 ;; *************** function _lcdClean *****************
  1033 ;; Defined at:
  1034 ;;		line 108 in file "SW/LcdDriver.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1048 ;;      Params:         0       0       0       0       0
  1049 ;;      Locals:         0       0       0       0       0
  1050 ;;      Temps:          2       0       0       0       0
  1051 ;;      Totals:         2       0       0       0       0
  1052 ;;Total ram usage:        2 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    1
  1055 ;; This function calls:
  1056 ;;		Nothing
  1057 ;; This function is called by:
  1058 ;;		_main
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           
  1063                           ;psect for function _lcdClean
  1064  0245                     _lcdClean:	
  1065                           
  1066                           ;LcdDriver.c: 110: PORTCbits.RC2 = 1;
  1067                           
  1068                           ;incstack = 0
  1069                           ; Regs used in _lcdClean: [wreg]
  1070  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1071  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1072  0247  1507               	bsf	7,2	;volatile
  1073                           
  1074                           ;LcdDriver.c: 111: PORTD = 0b00000001;
  1075  0248  3001               	movlw	1
  1076  0249  0088               	movwf	8	;volatile
  1077                           
  1078                           ;LcdDriver.c: 112: PORTCbits.RC2 = 0;
  1079  024A  1107               	bcf	7,2	;volatile
  1080                           
  1081                           ;LcdDriver.c: 113: _delay((unsigned long)((2)*(4000000/4000.0)));
  1082  024B  3003               	movlw	3
  1083  024C  00F6               	movwf	??_lcdClean+1
  1084  024D  3097               	movlw	151
  1085  024E  00F5               	movwf	??_lcdClean
  1086  024F                     u517:	
  1087  024F  0BF5               	decfsz	??_lcdClean,f
  1088  0250  2A4F               	goto	u517
  1089  0251  0BF6               	decfsz	??_lcdClean+1,f
  1090  0252  2A4F               	goto	u517
  1091  0253  2A54               	nop2
  1092  0254  0008               	return
  1093  0255                     __end_of_lcdClean:	
  1094                           
  1095                           	psect	text5
  1096  0255                     __ptext5:	
  1097 ;; *************** function _lcdBe *****************
  1098 ;; Defined at:
  1099 ;;		line 99 in file "SW/LcdDriver.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1113 ;;      Params:         0       0       0       0       0
  1114 ;;      Locals:         0       0       0       0       0
  1115 ;;      Temps:          1       0       0       0       0
  1116 ;;      Totals:         1       0       0       0       0
  1117 ;;Total ram usage:        1 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; Hardware stack levels required when called:    1
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           
  1128                           ;psect for function _lcdBe
  1129  0255                     _lcdBe:	
  1130                           
  1131                           ;LcdDriver.c: 101: PORTD = 0b00001100;
  1132                           
  1133                           ;incstack = 0
  1134                           ; Regs used in _lcdBe: [wreg]
  1135  0255  300C               	movlw	12
  1136  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1137  0257  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0258  0088               	movwf	8	;volatile
  1139                           
  1140                           ;LcdDriver.c: 102: PORTCbits.RC2 = 1;
  1141  0259  1507               	bsf	7,2	;volatile
  1142                           
  1143                           ;LcdDriver.c: 103: _delay((unsigned long)((1)*(4000000/4000000.0)));
  1144  025A  0000               	nop
  1145                           
  1146                           ;LcdDriver.c: 104: PORTCbits.RC2 = 0;
  1147  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1148  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1149  025D  1107               	bcf	7,2	;volatile
  1150                           
  1151                           ;LcdDriver.c: 105: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1152  025E  300D               	movlw	13
  1153  025F  00F5               	movwf	??_lcdBe
  1154  0260                     u527:	
  1155  0260  0BF5               	decfsz	??_lcdBe,f
  1156  0261  2A60               	goto	u527
  1157  0262  0008               	return
  1158  0263                     __end_of_lcdBe:	
  1159                           
  1160                           	psect	text6
  1161  010B                     __ptext6:	
  1162 ;; *************** function _WriteLine2 *****************
  1163 ;; Defined at:
  1164 ;;		line 31 in file "SW/LcdDriver.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  txt2            2    5[COMMON] PTR unsigned char 
  1167 ;;		 -> STR_2(10), ReceivedSecondLine(16), 
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;  i               2    3[BANK0 ] int 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1179 ;;      Params:         2       0       0       0       0
  1180 ;;      Locals:         0       2       0       0       0
  1181 ;;      Temps:          0       3       0       0       0
  1182 ;;      Totals:         2       5       0       0       0
  1183 ;;Total ram usage:        7 bytes
  1184 ;; Hardware stack levels used:    2
  1185 ;; Hardware stack levels required when called:    1
  1186 ;; This function calls:
  1187 ;;		Nothing
  1188 ;; This function is called by:
  1189 ;;		_main
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           
  1194                           ;psect for function _WriteLine2
  1195  010B                     _WriteLine2:	
  1196                           
  1197                           ;LcdDriver.c: 35: PORTCbits.RC2 = 1;
  1198                           
  1199                           ;incstack = 0
  1200                           ; Regs used in _WriteLine2: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1201  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1202  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1203  010D  1507               	bsf	7,2	;volatile
  1204                           
  1205                           ;LcdDriver.c: 36: PORTD = 0b11000000;
  1206  010E  30C0               	movlw	192
  1207  010F  0088               	movwf	8	;volatile
  1208                           
  1209                           ;LcdDriver.c: 37: PORTCbits.RC2 = 0;
  1210  0110  1107               	bcf	7,2	;volatile
  1211                           
  1212                           ;LcdDriver.c: 38: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1213  0111  300C               	movlw	12
  1214  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1215  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1216  0114  00C2               	movwf	??_WriteLine2
  1217  0115                     u537:	
  1218  0115  0BC2               	decfsz	??_WriteLine2,f
  1219  0116  2915               	goto	u537
  1220  0117  0000               	nop
  1221                           
  1222                           ;LcdDriver.c: 41: for (int i = 0; (i < 16) && (txt2[i] != 0); i++)
  1223  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1224  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1225  011A  01C5               	clrf	WriteLine2@i
  1226  011B  01C6               	clrf	WriteLine2@i+1
  1227  011C                     l950:	
  1228  011C  0846               	movf	WriteLine2@i+1,w
  1229  011D  3A80               	xorlw	128
  1230  011E  00FF               	movwf	127
  1231  011F  3080               	movlw	128
  1232  0120  027F               	subwf	127,w
  1233  0121  1D03               	skipz
  1234  0122  2925               	goto	u365
  1235  0123  3010               	movlw	16
  1236  0124  0245               	subwf	WriteLine2@i,w
  1237  0125                     u365:	
  1238  0125  1803               	skipnc
  1239  0126  0008               	return
  1240  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0129  0845               	movf	WriteLine2@i,w
  1243  012A  0775               	addwf	WriteLine2@txt2,w
  1244  012B  00C3               	movwf	??_WriteLine2+1
  1245  012C  0876               	movf	WriteLine2@txt2+1,w
  1246  012D  00C2               	movwf	??_WriteLine2
  1247  012E  1803               	skipnc
  1248  012F  0AC2               	incf	??_WriteLine2,f
  1249  0130  1BC5               	btfsc	WriteLine2@i,7
  1250  0131  03C2               	decf	??_WriteLine2,f
  1251  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1252  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1253  0134  0842               	movf	??_WriteLine2,w
  1254  0135  00C4               	movwf	??_WriteLine2+2
  1255  0136  0844               	movf	??_WriteLine2+2,w
  1256  0137  00FF               	movwf	127
  1257  0138  0843               	movf	??_WriteLine2+1,w
  1258  0139  0084               	movwf	4
  1259  013A  120A  118A  220A  120A  118A  	fcall	stringtab
  1260  013F  3A00               	xorlw	0
  1261  0140  1903               	btfsc	3,2
  1262  0141  0008               	return
  1263                           
  1264                           ;LcdDriver.c: 42: {
  1265                           ;LcdDriver.c: 44: PORTCbits.RC0 = 1;
  1266  0142  1407               	bsf	7,0	;volatile
  1267                           
  1268                           ;LcdDriver.c: 45: PORTCbits.RC2 = 1;
  1269  0143  1507               	bsf	7,2	;volatile
  1270                           
  1271                           ;LcdDriver.c: 46: PORTD = txt2[i];
  1272  0144  0845               	movf	WriteLine2@i,w
  1273  0145  0775               	addwf	WriteLine2@txt2,w
  1274  0146  00C3               	movwf	??_WriteLine2+1
  1275  0147  0876               	movf	WriteLine2@txt2+1,w
  1276  0148  00C2               	movwf	??_WriteLine2
  1277  0149  1803               	skipnc
  1278  014A  0AC2               	incf	??_WriteLine2,f
  1279  014B  1BC5               	btfsc	WriteLine2@i,7
  1280  014C  03C2               	decf	??_WriteLine2,f
  1281  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1282  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1283  014F  0842               	movf	??_WriteLine2,w
  1284  0150  00C4               	movwf	??_WriteLine2+2
  1285  0151  0844               	movf	??_WriteLine2+2,w
  1286  0152  00FF               	movwf	127
  1287  0153  0843               	movf	??_WriteLine2+1,w
  1288  0154  0084               	movwf	4
  1289  0155  120A  118A  220A  120A  118A  	fcall	stringtab
  1290  015A  0088               	movwf	8	;volatile
  1291                           
  1292                           ;LcdDriver.c: 47: PORTCbits.RC2 = 0;
  1293  015B  1107               	bcf	7,2	;volatile
  1294                           
  1295                           ;LcdDriver.c: 48: PORTCbits.RC0 = 0;
  1296  015C  1007               	bcf	7,0	;volatile
  1297                           
  1298                           ;LcdDriver.c: 49: _delay((unsigned long)((45)*(4000000/4000000.0)));
  1299  015D  300E               	movlw	14
  1300  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1301  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1302  0160  00C2               	movwf	??_WriteLine2
  1303  0161                     u547:	
  1304  0161  0BC2               	decfsz	??_WriteLine2,f
  1305  0162  2961               	goto	u547
  1306  0163  3001               	movlw	1
  1307  0164  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0165  1303               	bcf	3,6	;RP1=0, select bank0
  1309  0166  07C5               	addwf	WriteLine2@i,f
  1310  0167  1803               	skipnc
  1311  0168  0AC6               	incf	WriteLine2@i+1,f
  1312  0169  3000               	movlw	0
  1313  016A  07C6               	addwf	WriteLine2@i+1,f
  1314  016B  291C               	goto	l950
  1315  016C                     __end_of_WriteLine2:	
  1316                           
  1317                           	psect	text7
  1318  016C                     __ptext7:	
  1319 ;; *************** function _WriteLine1 *****************
  1320 ;; Defined at:
  1321 ;;		line 5 in file "SW/LcdDriver.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  txt1            2    5[COMMON] PTR unsigned char 
  1324 ;;		 -> STR_1(13), ReceivedFirstLine(16), 
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;  i               2    3[BANK0 ] int 
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1336 ;;      Params:         2       0       0       0       0
  1337 ;;      Locals:         0       2       0       0       0
  1338 ;;      Temps:          0       3       0       0       0
  1339 ;;      Totals:         2       5       0       0       0
  1340 ;;Total ram usage:        7 bytes
  1341 ;; Hardware stack levels used:    2
  1342 ;; Hardware stack levels required when called:    1
  1343 ;; This function calls:
  1344 ;;		Nothing
  1345 ;; This function is called by:
  1346 ;;		_main
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           
  1351                           ;psect for function _WriteLine1
  1352  016C                     _WriteLine1:	
  1353                           
  1354                           ;LcdDriver.c: 10: PORTCbits.RC2 = 1;
  1355                           
  1356                           ;incstack = 0
  1357                           ; Regs used in _WriteLine1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1358  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1359  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1360  016E  1507               	bsf	7,2	;volatile
  1361                           
  1362                           ;LcdDriver.c: 11: PORTD = 0b10000000;
  1363  016F  3080               	movlw	128
  1364  0170  0088               	movwf	8	;volatile
  1365                           
  1366                           ;LcdDriver.c: 12: PORTCbits.RC2 = 0;
  1367  0171  1107               	bcf	7,2	;volatile
  1368                           
  1369                           ;LcdDriver.c: 13: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1370  0172  300C               	movlw	12
  1371  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1372  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1373  0175  00C2               	movwf	??_WriteLine1
  1374  0176                     u557:	
  1375  0176  0BC2               	decfsz	??_WriteLine1,f
  1376  0177  2976               	goto	u557
  1377  0178  0000               	nop
  1378                           
  1379                           ;LcdDriver.c: 16: for (int i = 0; (i < 16) && (txt1[i] != 0); i++)
  1380  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1381  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1382  017B  01C5               	clrf	WriteLine1@i
  1383  017C  01C6               	clrf	WriteLine1@i+1
  1384  017D                     l928:	
  1385  017D  0846               	movf	WriteLine1@i+1,w
  1386  017E  3A80               	xorlw	128
  1387  017F  00FF               	movwf	127
  1388  0180  3080               	movlw	128
  1389  0181  027F               	subwf	127,w
  1390  0182  1D03               	skipz
  1391  0183  2986               	goto	u325
  1392  0184  3010               	movlw	16
  1393  0185  0245               	subwf	WriteLine1@i,w
  1394  0186                     u325:	
  1395  0186  1803               	skipnc
  1396  0187  0008               	return
  1397  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1398  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1399  018A  0845               	movf	WriteLine1@i,w
  1400  018B  0775               	addwf	WriteLine1@txt1,w
  1401  018C  00C3               	movwf	??_WriteLine1+1
  1402  018D  0876               	movf	WriteLine1@txt1+1,w
  1403  018E  00C2               	movwf	??_WriteLine1
  1404  018F  1803               	skipnc
  1405  0190  0AC2               	incf	??_WriteLine1,f
  1406  0191  1BC5               	btfsc	WriteLine1@i,7
  1407  0192  03C2               	decf	??_WriteLine1,f
  1408  0193  1283               	bcf	3,5	;RP0=0, select bank0
  1409  0194  1303               	bcf	3,6	;RP1=0, select bank0
  1410  0195  0842               	movf	??_WriteLine1,w
  1411  0196  00C4               	movwf	??_WriteLine1+2
  1412  0197  0844               	movf	??_WriteLine1+2,w
  1413  0198  00FF               	movwf	127
  1414  0199  0843               	movf	??_WriteLine1+1,w
  1415  019A  0084               	movwf	4
  1416  019B  120A  118A  220A  120A  118A  	fcall	stringtab
  1417  01A0  3A00               	xorlw	0
  1418  01A1  1903               	btfsc	3,2
  1419  01A2  0008               	return
  1420                           
  1421                           ;LcdDriver.c: 17: {
  1422                           ;LcdDriver.c: 19: PORTCbits.RC0 = 1;
  1423  01A3  1407               	bsf	7,0	;volatile
  1424                           
  1425                           ;LcdDriver.c: 20: PORTCbits.RC2 = 1;
  1426  01A4  1507               	bsf	7,2	;volatile
  1427                           
  1428                           ;LcdDriver.c: 21: PORTD = txt1[i];
  1429  01A5  0845               	movf	WriteLine1@i,w
  1430  01A6  0775               	addwf	WriteLine1@txt1,w
  1431  01A7  00C3               	movwf	??_WriteLine1+1
  1432  01A8  0876               	movf	WriteLine1@txt1+1,w
  1433  01A9  00C2               	movwf	??_WriteLine1
  1434  01AA  1803               	skipnc
  1435  01AB  0AC2               	incf	??_WriteLine1,f
  1436  01AC  1BC5               	btfsc	WriteLine1@i,7
  1437  01AD  03C2               	decf	??_WriteLine1,f
  1438  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1439  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1440  01B0  0842               	movf	??_WriteLine1,w
  1441  01B1  00C4               	movwf	??_WriteLine1+2
  1442  01B2  0844               	movf	??_WriteLine1+2,w
  1443  01B3  00FF               	movwf	127
  1444  01B4  0843               	movf	??_WriteLine1+1,w
  1445  01B5  0084               	movwf	4
  1446  01B6  120A  118A  220A  120A  118A  	fcall	stringtab
  1447  01BB  0088               	movwf	8	;volatile
  1448                           
  1449                           ;LcdDriver.c: 22: PORTCbits.RC2 = 0;
  1450  01BC  1107               	bcf	7,2	;volatile
  1451                           
  1452                           ;LcdDriver.c: 23: PORTCbits.RC0 = 0;
  1453  01BD  1007               	bcf	7,0	;volatile
  1454                           
  1455                           ;LcdDriver.c: 24: _delay((unsigned long)((45)*(4000000/4000000.0)));
  1456  01BE  300E               	movlw	14
  1457  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1458  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1459  01C1  00C2               	movwf	??_WriteLine1
  1460  01C2                     u567:	
  1461  01C2  0BC2               	decfsz	??_WriteLine1,f
  1462  01C3  29C2               	goto	u567
  1463  01C4  3001               	movlw	1
  1464  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1465  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1466  01C7  07C5               	addwf	WriteLine1@i,f
  1467  01C8  1803               	skipnc
  1468  01C9  0AC6               	incf	WriteLine1@i+1,f
  1469  01CA  3000               	movlw	0
  1470  01CB  07C6               	addwf	WriteLine1@i+1,f
  1471  01CC  297D               	goto	l928
  1472  01CD                     __end_of_WriteLine1:	
  1473                           
  1474                           	psect	text8
  1475  01CD                     __ptext8:	
  1476 ;; *************** function _tc_int *****************
  1477 ;; Defined at:
  1478 ;;		line 30 in file "SW/AppMain.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1492 ;;      Params:         0       0       0       0       0
  1493 ;;      Locals:         0       0       0       0       0
  1494 ;;      Temps:          5       0       0       0       0
  1495 ;;      Totals:         5       0       0       0       0
  1496 ;;Total ram usage:        5 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; This function calls:
  1499 ;;		Nothing
  1500 ;; This function is called by:
  1501 ;;		Interrupt level 1
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           
  1506                           ;psect for function _tc_int
  1507  01CD                     _tc_int:	
  1508                           
  1509                           ;AppMain.c: 32: if (RCIF == 1)
  1510  01CD  1E8C               	btfss	12,5	;volatile
  1511  01CE  29FF               	goto	i1l52
  1512                           
  1513                           ;AppMain.c: 33: {
  1514                           ;AppMain.c: 34: if(FirstLineCnt != (16-1))
  1515  01CF  300F               	movlw	15
  1516  01D0  0621               	xorwf	_FirstLineCnt,w
  1517  01D1  1903               	btfsc	3,2
  1518  01D2  29E9               	goto	i1l862
  1519                           
  1520                           ;AppMain.c: 35: {
  1521                           ;AppMain.c: 36: if(RCREG != '\n')
  1522  01D3  300A               	movlw	10
  1523  01D4  061A               	xorwf	26,w	;volatile
  1524  01D5  1903               	btfsc	3,2
  1525  01D6  29E4               	goto	i1l860
  1526                           
  1527                           ;AppMain.c: 37: {
  1528                           ;AppMain.c: 38: ReceivedFirstLine[FirstLineCnt] = RCREG;
  1529  01D7  081A               	movf	26,w	;volatile
  1530  01D8  00F0               	movwf	??_tc_int
  1531  01D9  0821               	movf	_FirstLineCnt,w
  1532  01DA  3E32               	addlw	(low (_ReceivedFirstLine| 0))& (0+255)
  1533  01DB  0084               	movwf	4
  1534  01DC  0870               	movf	??_tc_int,w
  1535  01DD  1383               	bcf	3,7	;select IRP bank0
  1536  01DE  0080               	movwf	0
  1537                           
  1538                           ;AppMain.c: 39: FirstLineCnt++;
  1539  01DF  3001               	movlw	1
  1540  01E0  00F0               	movwf	??_tc_int
  1541  01E1  0870               	movf	??_tc_int,w
  1542  01E2  07A1               	addwf	_FirstLineCnt,f
  1543                           
  1544                           ;AppMain.c: 40: }
  1545  01E3  29FE               	goto	i1l870
  1546  01E4                     i1l860:	
  1547                           
  1548                           ;AppMain.c: 41: else
  1549                           ;AppMain.c: 42: {
  1550                           ;AppMain.c: 43: FirstLineCnt = (16-1);
  1551  01E4  300F               	movlw	15
  1552  01E5  00F0               	movwf	??_tc_int
  1553  01E6  0870               	movf	??_tc_int,w
  1554  01E7  00A1               	movwf	_FirstLineCnt
  1555                           
  1556                           ;AppMain.c: 44: }
  1557                           ;AppMain.c: 46: }
  1558  01E8  29FE               	goto	i1l870
  1559  01E9                     i1l862:	
  1560                           
  1561                           ;AppMain.c: 47: else
  1562                           ;AppMain.c: 48: {
  1563                           ;AppMain.c: 49: if(RCREG != '\n')
  1564  01E9  300A               	movlw	10
  1565  01EA  061A               	xorwf	26,w	;volatile
  1566  01EB  1903               	btfsc	3,2
  1567  01EC  29FA               	goto	i1l868
  1568                           
  1569                           ;AppMain.c: 50: {
  1570                           ;AppMain.c: 51: ReceivedSecondLine[SecondLineCnt] = RCREG;
  1571  01ED  081A               	movf	26,w	;volatile
  1572  01EE  00F0               	movwf	??_tc_int
  1573  01EF  0820               	movf	_SecondLineCnt,w
  1574  01F0  3E22               	addlw	(low (_ReceivedSecondLine| 0))& (0+255)
  1575  01F1  0084               	movwf	4
  1576  01F2  0870               	movf	??_tc_int,w
  1577  01F3  1383               	bcf	3,7	;select IRP bank0
  1578  01F4  0080               	movwf	0
  1579                           
  1580                           ;AppMain.c: 52: SecondLineCnt++;
  1581  01F5  3001               	movlw	1
  1582  01F6  00F0               	movwf	??_tc_int
  1583  01F7  0870               	movf	??_tc_int,w
  1584  01F8  07A0               	addwf	_SecondLineCnt,f
  1585                           
  1586                           ;AppMain.c: 53: }
  1587  01F9  29FE               	goto	i1l870
  1588  01FA                     i1l868:	
  1589                           
  1590                           ;AppMain.c: 54: else
  1591                           ;AppMain.c: 55: {
  1592                           ;AppMain.c: 56: SecondLineCnt = (16-1);
  1593  01FA  300F               	movlw	15
  1594  01FB  00F0               	movwf	??_tc_int
  1595  01FC  0870               	movf	??_tc_int,w
  1596  01FD  00A0               	movwf	_SecondLineCnt
  1597  01FE                     i1l870:	
  1598                           
  1599                           ;AppMain.c: 57: }
  1600                           ;AppMain.c: 59: }
  1601                           ;AppMain.c: 62: RCIF = 0;
  1602  01FE  128C               	bcf	12,5	;volatile
  1603  01FF                     i1l52:	
  1604                           ;AppMain.c: 64: }
  1605                           ;AppMain.c: 66: return;
  1606                           
  1607  01FF  0874               	movf	??_tc_int+4,w
  1608  0200  00FF               	movwf	127
  1609  0201  0873               	movf	??_tc_int+3,w
  1610  0202  008A               	movwf	10
  1611  0203  0872               	movf	??_tc_int+2,w
  1612  0204  0084               	movwf	4
  1613  0205  0E71               	swapf	(??_tc_int+1)^(0+-128),w
  1614  0206  0083               	movwf	3
  1615  0207  0EFE               	swapf	126,f
  1616  0208  0E7E               	swapf	126,w
  1617  0209  0009               	retfie
  1618  020A                     __end_of_tc_int:	
  1619  007E                     btemp	set	126	;btemp
  1620  007E                     wtemp0	set	126
  1621                           
  1622                           	psect	intentry
  1623  0004                     __pintentry:	
  1624                           ;incstack = 0
  1625                           ; Regs used in _tc_int: [wreg-fsr0h+status,2+status,0]
  1626                           
  1627  0004                     interrupt_function:	
  1628  007E                     saved_w	set	btemp
  1629  0004  00FE               	movwf	btemp
  1630  0005  0E03               	swapf	3,w
  1631  0006  00F1               	movwf	??_tc_int+1
  1632  0007  0804               	movf	4,w
  1633  0008  00F2               	movwf	??_tc_int+2
  1634  0009  080A               	movf	10,w
  1635  000A  00F3               	movwf	??_tc_int+3
  1636  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1637  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1638  000D  087F               	movf	btemp+1,w
  1639  000E  00F4               	movwf	??_tc_int+4
  1640  000F  120A  118A  29CD   	ljmp	_tc_int


Data Sizes:
    Strings     23
    Constant    0
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      9      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    WriteLine2@txt2	PTR unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[10]), ReceivedSecondLine(BANK0[16]), 

    WriteLine1@txt1	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[13]), ReceivedFirstLine(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_WriteLine1
    _main->_WriteLine2
    _main->_lcdClean
    _main->_lcdInit

Critical Paths under _tc_int in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_WriteLine1
    _main->_WriteLine2

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     712
                                              5 BANK0      4     4      0
                         _WriteLine1
                         _WriteLine2
                              _lcdBe
                           _lcdClean
                            _lcdInit
                           _mainInit
                           _uartInit
 ---------------------------------------------------------------------------------
 (1) _uartInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mainInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0       0
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcdClean                                             2     2      0       0
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcdBe                                                1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _WriteLine2                                           7     5      2     291
                                              5 COMMON     2     0      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _WriteLine1                                           7     5      2     291
                                              5 COMMON     2     0      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _tc_int                                               5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _WriteLine1
   _WriteLine2
   _lcdBe
   _lcdClean
   _lcdInit
   _mainInit
   _uartInit

 _tc_int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      34       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9      2B       5       53.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      34      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun Feb 25 18:53:19 2018

                       pc 0002               __CFG_CP$OFF 0000                        l57 0048  
                      fsr 0004                       l950 011C                       l928 017D  
                     u325 0186                       u405 007E              __CFG_CPD$OFF 0000  
                     u507 0105                       u427 004E                       u365 0125  
                     u517 024F                       u437 009C                       u527 0260  
                     u447 00AE                       u537 0115                       u457 00BB  
                     u547 0161                       u467 00C8                       u557 0176  
                     u477 00D8                       u567 01C2                       u487 00E7  
                     u497 00F6                       fsr0 0004                       indf 0000  
            __CFG_LVP$OFF 0000                      STR_1 021A                      STR_2 0227  
                    _BRGH 04C2                      _CREN 00C4                      i1l52 01FF  
                    _RCIF 0065                      _SPEN 00C7                      _SYNC 04C4  
            __CFG_WRT$OFF 0000                      _main 0022                      btemp 007E  
                    start 0012             __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000  
             _CheckPassed 0077                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   i1l860 01E4                     i1l870 01FE                     i1l862 01E9  
                   i1l868 01FA                     _RCREG 001A                     _SPBRG 0099  
                   _PORTD 0008                     _TRISC 0087                     _TRISD 0088  
           __CFG_PWRTE$ON 0000           __end_of_lcdInit 010B            __CFG_FCMEN$OFF 0000  
                   _lcdBe 0255                     main@i 0049            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 0015              __end_of_main 0098                    ??_main 0047  
                  ?_lcdBe 0070          __end_of_lcdClean 0255          __end_of_mainInit 026D  
                  _tc_int 01CD                 ??_lcdInit 0075          __end_of_uartInit 0245  
                  saved_w 007E            WriteLine1@txt1 0075            WriteLine2@txt2 0075  
 __end_of__initialization 001E             _ReceivedCheck 0078            __pcstackCOMMON 0070  
              _WriteLine1 016C                _WriteLine2 010B             __end_of_lcdBe 0263  
       _ReceivedFirstLine 0032                   ??_lcdBe 0075                __pbssBANK0 0020  
              __pmaintext 0022                __pintentry 0004                   ?_tc_int 0070  
               ?_lcdClean 0070                 ?_mainInit 0070                __stringtab 020A  
           _SecondLineCnt 0020                 ?_uartInit 0070               ?_WriteLine1 0075  
             ?_WriteLine2 0075           __size_of_tc_int 003D                   _lcdInit 0098  
                 __ptext1 0231                   __ptext2 0263                   __ptext3 0098  
                 __ptext4 0245                   __ptext5 0255                   __ptext6 010B  
                 __ptext7 016C                   __ptext8 01CD                ??_lcdClean 0075  
                 clrloop0 026E                ??_mainInit 0075      end_of_initialization 001E  
            _FirstLineCnt 0021                ??_uartInit 0075                 _PORTCbits 0007  
               _TRISCbits 0087       __size_of_WriteLine1 0061       __size_of_WriteLine2 0061  
          __end_of_tc_int 020A       start_initialization 0015  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                ??_tc_int 0070               __pbssCOMMON 0077                 ___latbits 0002  
           __pcstackBANK0 0042        _ReceivedSecondLine 0022         __size_of_lcdClean 0010  
       __size_of_mainInit 000A               WriteLine1@i 0045               WriteLine2@i 0045  
            ??_WriteLine1 0042              ??_WriteLine2 0042         __size_of_uartInit 0014  
               __pstrings 020A                  ?_lcdInit 0070            __size_of_lcdBe 000E  
      __end_of_WriteLine1 01CD        __end_of_WriteLine2 016C         interrupt_function 0004  
               clear_ram0 026D                  _PIE1bits 008C               __stringbase 0219  
      __end_of__stringtab 021A          __size_of_lcdInit 0073                  _lcdClean 0245  
       __CFG_BOR4V$BOR21V 0000                  _mainInit 0263             __size_of_main 0076  
                _uartInit 0231                _INTCONbits 000B                  intlevel1 0000  
               stringcode 0214                  stringdir 0214                  stringtab 020A  
